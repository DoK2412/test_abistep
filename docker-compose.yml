services:
  postgres:
    image: postgres:latest
    container_name: postgres_table
    environment:
      POSTGRES_DB: manager_table
      POSTGRES_USER: users
      POSTGRES_PASSWORD: 123456789
    command:
      - 'postgres'
      - '-c'
      - 'max_connections=50'
      - '-c'
      - 'shared_buffers=1GB'
      - '-c'
      - 'effective_cache_size=4GB'
      - '-c'
      - 'work_mem=16MB'
      - '-c'
      - 'maintenance_work_mem=512MB'
      - '-c'
      - 'random_page_cost=1.1'
      - '-c'
      - 'temp_file_limit=10GB'
      - '-c'
      - 'log_min_duration_statement=200ms'
      - '-c'
      - 'idle_in_transaction_session_timeout=10s'
      - '-c'
      - 'lock_timeout=1s'
      - '-c'
      - 'statement_timeout=60s'
      - '-c'
      - 'shared_preload_libraries=pg_stat_statements'
      - '-c'
      - 'pg_stat_statements.max=10000'
      - '-c'
      - 'pg_stat_statements.track=all'
    ports:
      - "5464:5432"
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U users -d manager_table' ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app_network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: test_api
    restart: always
    ports:
      - '8082:8082'
    environment:
      PSQL_DB_USER: users
      PSQL_DB_PASSWORD: 123456789
      PSQL_DB_HOST: postgres_table
      PSQL_DB_PORT: 5432
      PSQL_DB_NAME: manager_table
    depends_on:
      - postgres
    networks:
      - app_network

volumes:
  db_data:

networks:
  app_network:
    driver: bridge